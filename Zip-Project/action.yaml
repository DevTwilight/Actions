name: 'Zip-Project'
description: 'Creates a ZIP archive'

inputs:
  include:
    required: true
    description: 'Paths to include in the ZIP archive'
  exclude:
    required: false
    description: 'Paths to exclude from the ZIP archive'
  name:
    required: true
    description: 'Base name of the output ZIP file (without .zip extension)'

  project:
    required: true
    description: 'Project folder name used for staging before compression'

runs:
  using: "composite"
  steps:
    - name: Zip-Project
      shell: pwsh
      run: |
        $IncludePaths = "${{ inputs.include }}" -split "`n"
        $ExcludePaths = "${{ inputs.exclude }}" -split "`n"
        $BaseName = "${{ inputs.name }}"
        $Project = "${{ inputs.project }}"

        # Ensure the user did not include ".zip" in the file name.
        if ($BaseName.ToLower().EndsWith(".zip")) {
            Write-Error "The input for 'name' should not include the '.zip' extension. Please provide only the base file name without '.zip'."
            exit 1
        }

        # Proceed with appending ".zip" to the file name automatically
        $ZipName = $BaseName + ".zip"

        $WorkingDirectory = (Get-Location).Path
        $ZipFullPath = Join-Path $WorkingDirectory $ZipName
        $ProjectFullPath = Join-Path $WorkingDirectory $Project

        Write-Host "Initiating ZIP creation process..."

        if (Test-Path $ProjectFullPath) {
          Remove-Item -Recurse -Force $ProjectFullPath
        }
        New-Item -Path $ProjectFullPath -ItemType Directory | Out-Null

        Write-Host "Copying files to temp directory: '$Project'"

        foreach ($Path in $IncludePaths) {
            $TrimmedPath = $Path.Trim()
            if (-not [string]::IsNullOrWhiteSpace($TrimmedPath) -and (Test-Path $TrimmedPath)) {
                $Destination = Join-Path $ProjectFullPath (Split-Path $TrimmedPath -Leaf)
                Copy-Item -Path $TrimmedPath -Destination $Destination -Recurse
            }
        }

        foreach ($Path in $ExcludePaths) {
            $TrimmedPath = $Path.Trim()
            if (-not [string]::IsNullOrWhiteSpace($TrimmedPath)) {
                $RelativeExcludePath = Join-Path $ProjectFullPath $TrimmedPath
                if (Test-Path $RelativeExcludePath) {
                    Remove-Item -Recurse -Force $RelativeExcludePath
                }
            }
        }

        Compress-Archive -Path $ProjectFullPath -DestinationPath $ZipFullPath -Force

        Remove-Item -Recurse -Force $ProjectFullPath

        Write-Host "ZIP file created successfully at '$ZipFullPath'."
