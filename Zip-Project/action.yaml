name: 'Zip-Project'
description: 'Creates a ZIP archive'

inputs:
  include:
    required: true
    description: 'Paths to include in the ZIP archive'
  exclude:
    required: false
    description: 'Paths to exclude from the ZIP archive'
  name:
    required: true
    description: 'Base name of the output ZIP and temp folder (without .zip)'

runs:
  using: "composite"
  steps:
    - name: Zip-Project
      shell: pwsh
      run: |
        $IncludePaths = "${{ inputs.include }}" -split "`n"
        $ExcludePaths = "${{ inputs.exclude }}" -split "`n"
        $FolderName = "${{ inputs.name }}"

        if ($FolderName.ToLower().EndsWith(".zip")) {
          Write-Error "'name' must not end with '.zip'. Use base name only."
          exit 1
        }

        $WorkingDir = Get-Location
        $TempPath = Join-Path $WorkingDir $FolderName
        $ZipPath = Join-Path $WorkingDir "$FolderName.zip"

        Write-Information "Zipping files..."

        if (Test-Path $TempPath) {
          Remove-Item -Recurse -Force $TempPath
        }

        New-Item -Path $TempPath -ItemType Directory | Out-Null

        foreach ($Path in $IncludePaths) {
          $Path = $Path.Trim()
          if ($Path -and (Test-Path $Path)) {
            $Dest = Join-Path $TempPath (Split-Path $Path -Leaf)
            Copy-Item -Path $Path -Destination $Dest -Recurse
          }
        }

        foreach ($Path in $ExcludePaths) {
          $Path = $Path.Trim()
          if ($Path) {
            $Exclude = Join-Path $TempPath $Path
            if (Test-Path $Exclude) {
              Remove-Item -Recurse -Force $Exclude
            }
          }
        }

        Compress-Archive -Path $TempPath -DestinationPath $ZipPath -Force
        Remove-Item -Recurse -Force $TempPath

        Write-Information "ZIP created: $ZipPath"
